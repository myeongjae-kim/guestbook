version '0.0.1-SNAPSHOT'

ext {
    springDataCommonsVersion = "2.0.13.RELEASE"
    awsJavaSdkDynamoDBVersion = "1.11.557"
    springDataDynamoDBVersion = "5.0.4"
}

sourceCompatibility = 1.8

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor("org.projectlombok:lombok")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.data:spring-data-commons:${springDataCommonsVersion}"
    implementation "com.amazonaws:aws-java-sdk-dynamodb:${awsJavaSdkDynamoDBVersion}"
    implementation "com.github.derjust:spring-data-dynamodb:${springDataDynamoDBVersion}"

    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation('org.junit.jupiter:junit-jupiter-params')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')

    runtime 'org.springframework.boot:spring-boot-devtools'
}

task dockerComposeUp(type: Exec) {
    group = 'dynamodb'
    commandLine "bash", "-c", "docker-compose up -d"
}

task dockerComposeDown(type: Exec) {
    group = 'dynamodb'
    commandLine "bash", "-c", "docker-compose down"
}

task createCommentTable (type: Exec) {
    group = 'dynamodb'
    commandLine "bash", "-c",\
        'aws dynamodb create-table \
            --endpoint-url http://localhost:8000 \
            --table-name Comment \
            --attribute-definitions \
                AttributeName=id,AttributeType=S \
                AttributeName=mentionId,AttributeType=N \
                AttributeName=createdAt,AttributeType=S \
            --key-schema AttributeName=id,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 \
            --global-secondary-indexes IndexName=byMentionId,\
KeySchema=["{\
  AttributeName=mentionId,\
  KeyType=HASH\
}","{\
  AttributeName=createdAt,\
  KeyType=RANGE\
}"],\
Projection="{ProjectionType=ALL}",\
ProvisionedThroughput="{\
  ReadCapacityUnits=1,\
  WriteCapacityUnits=1\
}"'
}

task deleteCommentTable (type: Exec) {
    group = 'dynamodb'
    commandLine "bash", "-c",\
        'aws dynamodb delete-table \
            --endpoint-url http://localhost:8000\
            --table-name "Comment"'
}

createCommentTable.dependsOn dockerComposeUp
bootRun.dependsOn createCommentTable

bootRun.finalizedBy deleteCommentTable
deleteCommentTable.finalizedBy dockerComposeDown

test.dependsOn dockerComposeUp
test.finalizedBy dockerComposeDown

integrationTest.dependsOn dockerComposeUp
integrationTest.finalizedBy dockerComposeDown
