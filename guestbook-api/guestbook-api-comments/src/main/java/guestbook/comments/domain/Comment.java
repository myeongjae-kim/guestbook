package guestbook.comments.domain;

import static com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import static java.time.LocalDateTime.now;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;

import java.time.LocalDateTime;

import guestbook.comments.config.DynamoDbConfig.LocalDateTimeConverter;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter // Setters are used in spring-data-dynamodb
@NoArgsConstructor
@DynamoDBTable(tableName = "Comment")
public class Comment {
    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    private String id;
    @DynamoDBAttribute
    @DynamoDBIndexHashKey(globalSecondaryIndexName = "byMentionId")
    private Integer mentionId;
    @DynamoDBAttribute
    private String name;
    @DynamoDBAttribute
    private String content;
    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBAttributeType.BOOL)
    private boolean deleted;
    @DynamoDBAttribute
    @DynamoDBIndexRangeKey(globalSecondaryIndexName = "byMentionId")
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    private LocalDateTime createdAt;
    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    private LocalDateTime deletedAt;

    @Builder
    public Comment(Integer mentionId, String name, String content) {
        this.mentionId = mentionId;
        this.name = name;
        this.content = content;
        this.createdAt = now();
        this.deleted = false;
    }

    public void update(String content) {
        this.content = content;
    }

    public void delete() {
        this.deleted = true;
        this.deletedAt = now();
    }
}
